"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.redisClientProvider = void 0;
var ioredis_1 = __importDefault(require("ioredis"));
var CacheFlow_1 = require("../CacheFlow");
var RedisClientProvider = /** @class */ (function () {
    function RedisClientProvider() {
    }
    RedisClientProvider.prototype.getRedisClient = function () {
        var redisConfiguration = CacheFlow_1.CacheFlow.getRedisConfiguration();
        var logger = CacheFlow_1.CacheFlow.getLogger();
        if (!this.ioRedisClient) {
            try {
                this.ioRedisClient = new ioredis_1.default({
                    host: redisConfiguration.host,
                    port: redisConfiguration.port || 6379,
                    db: redisConfiguration.db || 0,
                    retryStrategy: function (times) {
                        return Math.min(times * 100, 3000);
                    },
                    maxRetriesPerRequest: 3
                });
                this.ioRedisClient.on('error', function (error) {
                    logger.error('IORedis connection error: ', error);
                });
            }
            catch (error) {
                logger.error('Failed to instantiate IORedis client', error);
            }
        }
        return this.ioRedisClient;
    };
    return RedisClientProvider;
}());
exports.redisClientProvider = new RedisClientProvider();
//# sourceMappingURL=RedisClientProvider.js.map