"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CacheLoader = void 0;
var BaseCacheLoader_1 = require("./BaseCacheLoader");
var CacheFlow_1 = require("./CacheFlow");
/**
 * Cache class allowing to create caches with automatic cache loading and delegates.
 */
var CacheLoader = /** @class */ (function (_super) {
    __extends(CacheLoader, _super);
    /**
     * Constructor.
     *
     * @param {String} cacheId the identifier of the cache
     * @param {CacheOptions} options the cache options:
     */
    function CacheLoader(cacheId, options) {
        if (options === void 0) { options = {}; }
        var _this = _super.call(this, cacheId, options) || this;
        _this.isCacheable = false;
        CacheFlow_1.CacheFlow.addInstance(cacheId, _this);
        return _this;
    }
    return CacheLoader;
}(BaseCacheLoader_1.BaseCacheLoader));
exports.CacheLoader = CacheLoader;
//# sourceMappingURL=CacheLoader.js.map